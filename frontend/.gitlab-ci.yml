image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/node:18

variables:
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"
  SONARQUBE_PROJECT_KEY: ${CI_PROJECT_ID}:${CI_COMMIT_REF_SLUG}
  SONARQUBE_PROJECT_NAME: sa4/2024/team1-tier0/backend:${CI_COMMIT_REF_SLUG}
  SONARQUBE_GROUP_ID: AY8FGneFbcXSaHk6fbDm

stages:
  - install
  - build
  - test
  - release
  - quality
  - deploy


cache:
  paths:
    - ./node_modules/

install_dependencies:
  stage: install
  script:
    - yarn install
  artifacts:
    expire_in: 2 hours
    paths:
      - ./node_modules/

build:
  stage: build
  script:
    - yarn build
  artifacts:
    expire_in: 2 hours
    paths:
      - ./dist/

test:
  stage: test
  script:
    - yarn run test:unit
  dependencies:
    - build
  artifacts:
    when: always
    expire_in: 2 hours
    paths:
      - ./coverage

.sonarqube-check:
  stage: quality
  tags:
    - ci-dev-runner
  image:
    name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/sonarsource/sonar-scanner-cli:5.0.1
    entrypoint: [ '' ]
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
    GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache

# This sonarqube job can be manually run on feature branches.
# It is allowed to fail.
sonarqube-check-branch:
  extends: .sonarqube-check
  rules:
    - if: ($CI_PIPELINE_SOURCE == 'push' && $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH && $CI_COMMIT_BRANCH != "main")
  when: manual
  allow_failure: true
  script:
    - "curl -u ${SONAR_TOKEN}: -X POST \"https://lab.si.usi.ch/sonarqube/api/projects/create?name=${SONARQUBE_PROJECT_NAME}&project=${SONARQUBE_PROJECT_KEY}\" || echo Project already exists"
    - "curl -u ${SONAR_TOKEN}: -X POST \"https://lab.si.usi.ch/sonarqube/api/permissions/add_group?projectKey=${SONARQUBE_PROJECT_KEY}&groupId=${SONARQUBE_GROUP_ID}&permission=user\" || echo Project permission already set or has error"
    - "curl -u ${SONAR_TOKEN}: -X POST \"https://lab.si.usi.ch/sonarqube/api/permissions/add_group?projectKey=${SONARQUBE_PROJECT_KEY}&groupId=${SONARQUBE_GROUP_ID}&permission=codeviewer\" || echo Project permission already set or has error"
    - "curl -u ${SONAR_TOKEN}: -X POST \"https://lab.si.usi.ch/sonarqube/api/qualityprofiles/add_project?language=java&project=${SONARQUBE_PROJECT_KEY}&qualityProfile=SA4%20JS%20way%20%28T2%29\" || echo Project permission already set or has error"
    - sonar-scanner


## This sonarqube job is run on main and dev, and it's automatic.
## Moreover, it is *not* allowed to fail - if the Quality Gate fails,
## the pipeline fails.
sonarqube-check:
  extends: .sonarqube-check
  tags:
    - ci-dev-runner
  rules:
    - if: ($CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH || $CI_COMMIT_BRANCH == "main")
  allow_failure: false
  script:
    - "curl -u ${SONAR_TOKEN}: -X POST \"https://lab.si.usi.ch/sonarqube/api/projects/create?name=${SONARQUBE_PROJECT_NAME}&project=${SONARQUBE_PROJECT_KEY}\" || echo Project already exists"
    - "curl -u ${SONAR_TOKEN}: -X POST \"https://lab.si.usi.ch/sonarqube/api/permissions/add_group?projectKey=${SONARQUBE_PROJECT_KEY}&groupId=${SONARQUBE_GROUP_ID}&permission=user\" || echo Project permission already set or has error"
    - "curl -u ${SONAR_TOKEN}: -X POST \"https://lab.si.usi.ch/sonarqube/api/permissions/add_group?projectKey=${SONARQUBE_PROJECT_KEY}&groupId=${SONARQUBE_GROUP_ID}&permission=codeviewer\" || echo Project permission already set or has error"
    - "curl -u ${SONAR_TOKEN}: -X POST \"https://lab.si.usi.ch/sonarqube/api/qualityprofiles/add_project?language=java&project=${SONARQUBE_PROJECT_KEY}&qualityProfile=SA4%20JS%20way%20%28T2%29\" || echo Project permission already set or has error"
    - sonar-scanner
